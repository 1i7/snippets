#ifndef MT9D111_REGS_H
#define MT9D111_REGS_H
#include "ArduCAM.h"
#include <avr/pgmspace.h>

/*******************************************************************************************
 #  Display resolution standards #
        QCIF    : 176 x 144
        CIF     : 352 x 288
        QVGA    : 320 x 240
        VGA     : 640 x 480 
        SVGA    : 800 x 600 
        XGA     : 1024 x 768 
        WXGA    : 1280 x 800 
        QVGA    : 1280 x 960 
        SXGA    : 1280 x 1024 
        SXGA+   : 1400 x 1050 
        WSXGA+  : 1680 x 1050 
        UXGA    : 1600 x 1200 
        WUXGA   : 1920 x 1200 
        QXGA    : 2048 x 1536
********************************************************************************************/
const struct sensor_reg MT9D111_QVGA_30fps[] PROGMEM=
{
		{0xf0, 0x0}, 
		{0x05, 0x011E},        //HBLANK (B) = 286
		{0x06, 0x0017},        //VBLANK (B) = 23
		{0x07, 0x00FE},        //HBLANK (A) = 254
		{0x08, 0x008E},        //VBLANK (A) = 142
		{0x20, 0x0300},         //Read Mode (B) = 768
		{0x21, 0x8490},         //Read Mode (A) = 33936
		{0x66, 0x1001},         //PLL Control 1 = 4097
		{0x67, 0x503 },        //PLL Control 2 = 1283
		{0x65, 0xA000},        //Clock CNTRL: PLL ON = 40960
		{0x65, 0x2000},        //Clock CNTRL: USE PLL = 8192


  		//;Sequencer States...
		{0xf0, 0x1}, 
		{0xC6, 0xA122},        //Enter Preview: Auto Exposure
		{0xC8, 0x01  },      //      = 1
		{0xC6, 0xA123},        //Enter Preview: Flicker Detection
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA124},        //Enter Preview: Auto White Balance
		{0xC8, 0x01  },      //      = 1
		{0xC6, 0xA125},        //Enter Preview: Auto Focus
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA126},        //Enter Preview: Histogram
		{0xC8, 0x01  },      //      = 1
		{0xC6, 0xA127},        //Enter Preview: Strobe Control
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA128},        //Enter Preview: Skip Control
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA129},        //In Preview: Auto Exposure
		{0xC8, 0x03  },      //      = 3
		{0xC6, 0xA12A},        //In Preview: Flicker Detection
		{0xC8, 0x02  },      //      = 2
		{0xC6, 0xA12B},        //In Preview: Auto White Balance
		{0xC8, 0x03  },      //      = 3
		{0xC6, 0xA12C},        //In Preview: Auto Focus
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA12D},        //In Preview: Histogram
		{0xC8, 0x03  },      //      = 3
		{0xC6, 0xA12E},        //In Preview: Strobe Control
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA12F},        //In Preview: Skip Control
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA130},        //Exit Preview: Auto Exposure
		{0xC8, 0x04  },      //      = 4
		{0xC6, 0xA131},        //Exit Preview: Flicker Detection
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA132},        //Exit Preview: Auto White Balance
		{0xC8, 0x01  },      //      = 1
		{0xC6, 0xA133},        //Exit Preview: Auto Focus
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA134},        //Exit Preview: Histogram
		{0xC8, 0x01  },      //      = 1
		{0xC6, 0xA135},        //Exit Preview: Strobe Control
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA136},        //Exit Preview: Skip Control
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA137},        //Capture: Auto Exposure
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA138},        //Capture: Flicker Detection
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA139},        //Capture: Auto White Balance
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA13A},        //Capture: Auto Focus
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA13B},        //Capture: Histogram
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA13C},        //Capture: Strobe Control
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA13D},        //Capture: Skip Control
		{0xC8, 0x00  },      //      = 0
		             
		             
		{0xC6, 0x2703},        //Output Width (A)
		{0xC8, 0x0140},        //      = 320
		{0xC6, 0x2705},        //Output Height (A)
		{0xC8, 0x00F0},        //      = 240
		{0xC6, 0x2707},        //Output Width (B)
		{0xC8, 0x0640},        //      = 1600
		{0xC6, 0x2709},        //Output Height (B)
		{0xC8, 0x04B0},        //      = 1200
		{0xC6, 0x270B},        //mode_config
		{0xC8, 0x0030},        //      = 48
		{0xC6, 0x270F},        //Row Start (A)
		{0xC8, 0x01C },       //      = 28
		{0xC6, 0x2711},        //Column Start (A)
		{0xC8, 0x03C },       //      = 60
		{0xC6, 0x2713},        //Row Height (A)
		{0xC8, 0x3C0 },       //      = 960
		{0xC6, 0x2715},        //Column Width (A)
		{0xC8, 0x500 },       //      = 1280
		{0xC6, 0x2717},        //Extra Delay (A)
		{0xC8, 0x124 },       //      = 292
		{0xC6, 0x2719},        //Row Speed (A)
		{0xC8, 0x0011},        //      = 17
		{0xC6, 0x271B},        //Row Start (B)
		{0xC8, 0x01C },       //      = 28
		{0xC6, 0x271D},        //Column Start (B)
		{0xC8, 0x03C },       //      = 60
		{0xC6, 0x271F},        //Row Height (B)
		{0xC8, 0x4B0 },       //      = 1200
		{0xC6, 0x2721},        //Column Width (B)
		{0xC8, 0x640 },       //      = 1600
		{0xC6, 0x2723},        //Extra Delay (B)
		{0xC8, 0x23F },       //      = 575
		{0xC6, 0x2725},        //Row Speed (B)
		{0xC8, 0x0011},        //      = 17
		{0xC6, 0x2727},        //Crop_X0 (A)
		{0xC8, 0x0000},        //      = 0
		{0xC6, 0x2729},        //Crop_X1 (A)
		{0xC8, 0x0140},        //      = 320
		{0xC6, 0x272B},        //Crop_Y0 (A)
		{0xC8, 0x0000},        //      = 0
		{0xC6, 0x272D},        //Crop_Y1 (A)
		{0xC8, 0x00F0},        //      = 240
		{0xC6, 0x2735},        //Crop_X0 (B)
		{0xC8, 0x0000},        //      = 0
		{0xC6, 0x2737},        //Crop_X1 (B)
		{0xC8, 0x0640},        //      = 1600
		{0xC6, 0x2739},        //Crop_Y0 (B)
		{0xC8, 0x0000},        //      = 0
		{0xC6, 0x273B},        //Crop_Y1 (B)
		{0xC8, 0x04B0},        //      = 1200
		{0xC6, 0xA743},        //Gamma and Contrast Settings (A)
		{0xC8, 0x42  },      //      = 66
		{0xC6, 0xA744},        //Gamma and Contrast Settings (B)
		{0xC8, 0x42  },      //      = 66
		
		
		//;Custom gamma tables...
		
		{0xC6, 0xA745},        //Gamma Table 0 (A)
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA746},        //Gamma Table 1 (A)
		{0xC8, 0x14  },      //      = 20
		{0xC6, 0xA747},        //Gamma Table 2 (A)
		{0xC8, 0x23  },      //      = 35
		{0xC6, 0xA748},        //Gamma Table 3 (A)
		{0xC8, 0x3A  },      //      = 58
		{0xC6, 0xA749},        //Gamma Table 4 (A)
		{0xC8, 0x5E  },      //      = 94
		{0xC6, 0xA74A},        //Gamma Table 5 (A)
		{0xC8, 0x76  },      //      = 118
		{0xC6, 0xA74B},        //Gamma Table 6 (A)
		{0xC8, 0x88  },      //      = 136
		{0xC6, 0xA74C},        //Gamma Table 7 (A)
		{0xC8, 0x96  },      //      = 150
		{0xC6, 0xA74D},        //Gamma Table 8 (A)
		{0xC8, 0xA3  },      //      = 163
		{0xC6, 0xA74E},        //Gamma Table 9 (A)
		{0xC8, 0xAF  },      //      = 175
		{0xC6, 0xA74F},        //Gamma Table 10 (A)
		{0xC8, 0xBA  },      //      = 186
		{0xC6, 0xA750},        //Gamma Table 11 (A)
		{0xC8, 0xC4  },      //      = 196
		{0xC6, 0xA751},        //Gamma Table 12 (A)
		{0xC8, 0xCE  },      //      = 206
		{0xC6, 0xA752},        //Gamma Table 13 (A)
		{0xC8, 0xD7  },      //      = 215
		{0xC6, 0xA753},        //Gamma Table 14 (A)
		{0xC8, 0xE0  },      //      = 224
		{0xC6, 0xA754},        //Gamma Table 15 (A)
		{0xC8, 0xE8  },      //      = 232
		{0xC6, 0xA755},        //Gamma Table 16 (A)
		{0xC8, 0xF0  },      //      = 240
		{0xC6, 0xA756},        //Gamma Table 17 (A)
		{0xC8, 0xF8  },      //      = 248
		{0xC6, 0xA757},        //Gamma Table 18 (A)
		{0xC8, 0xFF  },      //      = 255
		{0xC6, 0xA758},        //Gamma Table 0 (B)
		{0xC8, 0x00  },      //      = 0
		{0xC6, 0xA759},        //Gamma Table 1 (B)
		{0xC8, 0x14  },      //      = 20
		{0xC6, 0xA75A},        //Gamma Table 2 (B)
		{0xC8, 0x23  },      //      = 35
		{0xC6, 0xA75B},        //Gamma Table 3 (B)
		{0xC8, 0x3A  },      //      = 58
		{0xC6, 0xA75C},        //Gamma Table 4 (B)
		{0xC8, 0x5E  },      //      = 94
		{0xC6, 0xA75D},        //Gamma Table 5 (B)
		{0xC8, 0x76  },      //      = 118
		{0xC6, 0xA75E},        //Gamma Table 6 (B)
		{0xC8, 0x88  },      //      = 136
		{0xC6, 0xA75F},        //Gamma Table 7 (B)
		{0xC8, 0x96  },      //      = 150
		{0xC6, 0xA760},        //Gamma Table 8 (B)
		{0xC8, 0xA3  },      //      = 163
		{0xC6, 0xA761},        //Gamma Table 9 (B)
		{0xC8, 0xAF  },      //      = 175
		{0xC6, 0xA762},        //Gamma Table 10 (B)
		{0xC8, 0xBA  },      //      = 186
		{0xC6, 0xA763},        //Gamma Table 11 (B)
		{0xC8, 0xC4  },      //      = 196
		{0xC6, 0xA764},        //Gamma Table 12 (B)
		{0xC8, 0xCE  },      //      = 206
		{0xC6, 0xA765},        //Gamma Table 13 (B)
		{0xC8, 0xD7  },      //      = 215
		{0xC6, 0xA766},        //Gamma Table 14 (B)
		{0xC8, 0xE0  },      //      = 224
		{0xC6, 0xA767},        //Gamma Table 15 (B)
		{0xC8, 0xE8  },      //      = 232
		{0xC6, 0xA768},        //Gamma Table 16 (B)
		{0xC8, 0xF0  },      //      = 240
		{0xC6, 0xA769},        //Gamma Table 17 (B)
		{0xC8, 0xF8  },      //      = 248
		{0xC6, 0xA76A},        //Gamma Table 18 (B)
		{0xC8, 0xFF  },      //      = 255
		             
		             
		{0xC6, 0x276D},        //FIFO_Conf1 (A)
		{0xC8, 0xE0E2},        //      = 57570
		{0xC6, 0xA76F},        //FIFO_Conf2 (A)
		{0xC8, 0xE1  },      //      = 225
		{0xC6, 0x2774},        //FIFO_Conf1 (B)
		{0xC8, 0xE0E1},        //      = 57569
		{0xC6, 0xA776},        //FIFO_Conf2 (B)
		{0xC8, 0xE1  },      //      = 225
		{0xC6, 0x220B},        //Max R12 (B)(Shutter Delay)
		{0xC8, 0x0000},        //      = 0
		{0xC6, 0xA217},        //IndexTH23
		{0xC8, 0x08  },      //      = 8
		{0xC6, 0x2228},        //RowTime (msclk per)/4
		{0xC8, 0x011F},        //      = 287
		{0xC6, 0x222F},        //R9 Step
		{0xC8, 0x0059},        //      = 89
		{0xC6, 0xA408},        //search_f1_50
		{0xC8, 0x14  },      //      = 20
		{0xC6, 0xA409},        //search_f2_50
		{0xC8, 0x16  },      //      = 22
		{0xC6, 0xA40A},        //search_f1_60
		{0xC8, 0x10  },      //      = 16
		{0xC6, 0xA40B},        //search_f2_60
		{0xC8, 0x12  },      //      = 18
		{0xC6, 0x2411},        //R9_Step_60
		{0xC8, 0x0059},        //      = 89
		{0xC6, 0x2413},        //R9_Step_50
		{0xC8, 0x006B},        //      = 107
		//DELAY = 500  },
		{0xC6, 0xA103},        //Refresh Sequencer Mode
		{0xC8, 0x06  },      //      = 6
		//DELAY = 500  },
		{0xC6, 0xA103},        //Refresh Sequencer
		{0xC8, 0x05  },      //      = 5
		{0xff, 0xffff},
};	
	
	
const struct sensor_reg MT9D111_QVGA_15fps[] PROGMEM=
{
	{0xf0, 0x0}, 
	{0x5, 0x11e}, 
	{0x6, 0xb}, 
	{0x7, 0xfe}, 
	{0x8, 0xb}, 
	{0x20, 0x300}, 
	{0x21, 0x8400}, 
	{0x66, 0x1000}, 
	{0x67, 0x503}, 
	{0x65, 0xa000}, 
	{0x65, 0x2000}, 
	{0xf0, 0x1}, 
	{0xc6, 0xa122}, 
	{0xc8, 0x1}, 
	{0xc6, 0xa123}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa124}, 
	{0xc8, 0x1}, 
	{0xc6, 0xa125}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa126}, 
	{0xc8, 0x1}, 
	{0xc6, 0xa127}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa128}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa129}, 
	{0xc8, 0x3}, 
	{0xc6, 0xa12a}, 
	{0xc8, 0x2}, 
	{0xc6, 0xa12b}, 
	{0xc8, 0x3}, 
	{0xc6, 0xa12c}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa12d}, 
	{0xc8, 0x3}, 
	{0xc6, 0xa12e}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa12f}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa130}, 
	{0xc8, 0x4}, 
	{0xc6, 0xa131}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa132}, 
	{0xc8, 0x1}, 
	{0xc6, 0xa133}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa134}, 
	{0xc8, 0x1}, 
	{0xc6, 0xa135}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa136}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa137}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa138}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa139}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa13a}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa13b}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa13c}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa13d}, 
	{0xc8, 0x0}, 
	{0xc6, 0x2703}, 
	{0xc8, 0x140}, 
	{0xc6, 0x2705}, 
	{0xc8, 0xf0}, 
	{0xc6, 0x2707}, 
	{0xc8, 0x140}, 
	{0xc6, 0x2709}, 
	{0xc8, 0xf0}, 
	{0xc6, 0x270b}, 
	{0xc8, 0x30}, 
	{0xc6, 0x270f}, 
	{0xc8, 0x1c}, 
	{0xc6, 0x2711}, 
	{0xc8, 0x3c}, 
	{0xc6, 0x2713}, 
	{0xc8, 0x4b0}, 
	{0xc6, 0x2715}, 
	{0xc8, 0x640}, 
	{0xc6, 0x2717}, 
	{0xc8, 0x0}, 
	{0xc6, 0x2719}, 
	{0xc8, 0x11}, 
	{0xc6, 0x271b}, 
	{0xc8, 0x1c}, 
	{0xc6, 0x271d}, 
	{0xc8, 0x3c}, 
	{0xc6, 0x271f}, 
	{0xc8, 0x4b0}, 
	{0xc6, 0x2721}, 
	{0xc8, 0x640}, 
	{0xc6, 0x2723}, 
	{0xc8, 0x53c}, 
	{0xc6, 0x2725}, 
	{0xc8, 0x11}, 
	{0xc6, 0x2727}, 
	{0xc8, 0x0}, 
	{0xc6, 0x2729}, 
	{0xc8, 0x320}, 
	{0xc6, 0x272b}, 
	{0xc8, 0x0}, 
	{0xc6, 0x272d}, 
	{0xc8, 0x258}, 
	{0xc6, 0x2735}, 
	{0xc8, 0x0}, 
	{0xc6, 0x2737}, 
	{0xc8, 0x640}, 
	{0xc6, 0x2739}, 
	{0xc8, 0x0}, 
	{0xc6, 0x273b}, 
	{0xc8, 0x4b0}, 
	{0xc6, 0xa743}, 
	{0xc8, 0x42}, 
	{0xc6, 0xa744}, 
	{0xc8, 0x42}, 
	{0xc6, 0xa745}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa746}, 
	{0xc8, 0x14}, 
	{0xc6, 0xa747}, 
	{0xc8, 0x23}, 
	{0xc6, 0xa748}, 
	{0xc8, 0x3a}, 
	{0xc6, 0xa749}, 
	{0xc8, 0x5e}, 
	{0xc6, 0xa74a}, 
	{0xc8, 0x76}, 
	{0xc6, 0xa74b}, 
	{0xc8, 0x88}, 
	{0xc6, 0xa74c}, 
	{0xc8, 0x96}, 
	{0xc6, 0xa74d}, 
	{0xc8, 0xa3}, 
	{0xc6, 0xa74e}, 
	{0xc8, 0xaf}, 
	{0xc6, 0xa74f}, 
	{0xc8, 0xba}, 
	{0xc6, 0xa750}, 
	{0xc8, 0xc4}, 
	{0xc6, 0xa751}, 
	{0xc8, 0xce}, 
	{0xc6, 0xa752}, 
	{0xc8, 0xd7}, 
	{0xc6, 0xa753}, 
	{0xc8, 0xe0}, 
	{0xc6, 0xa754}, 
	{0xc8, 0xe8}, 
	{0xc6, 0xa755}, 
	{0xc8, 0xf0}, 
	{0xc6, 0xa756}, 
	{0xc8, 0xf8}, 
	{0xc6, 0xa757}, 
	{0xc8, 0xff}, 
	{0xc6, 0xa758}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa759}, 
	{0xc8, 0x14}, 
	{0xc6, 0xa75a}, 
	{0xc8, 0x23}, 
	{0xc6, 0xa75b}, 
	{0xc8, 0x3a}, 
	{0xc6, 0xa75c}, 
	{0xc8, 0x5e}, 
	{0xc6, 0xa75d}, 
	{0xc8, 0x76}, 
	{0xc6, 0xa75e}, 
	{0xc8, 0x88}, 
	{0xc6, 0xa75f}, 
	{0xc8, 0x96}, 
	{0xc6, 0xa760}, 
	{0xc8, 0xa3}, 
	{0xc6, 0xa761}, 
	{0xc8, 0xaf}, 
	{0xc6, 0xa762}, 
	{0xc8, 0xba}, 
	{0xc6, 0xa763}, 
	{0xc8, 0xc4}, 
	{0xc6, 0xa764}, 
	{0xc8, 0xce}, 
	{0xc6, 0xa765}, 
	{0xc8, 0xd7}, 
	{0xc6, 0xa766}, 
	{0xc8, 0xe0}, 
	{0xc6, 0xa767}, 
	{0xc8, 0xe8}, 
	{0xc6, 0xa768}, 
	{0xc8, 0xf0}, 
	{0xc6, 0xa769}, 
	{0xc8, 0xf8}, 
	{0xc6, 0xa76a}, 
	{0xc8, 0xff}, 
	{0xc6, 0x276d}, 
	{0xc8, 0xe0e2}, 
	{0xc6, 0xa76f}, 
	{0xc8, 0xe1}, 
	{0xc6, 0x2774}, 
	{0xc8, 0xe0e1}, 
	{0xc6, 0xa776}, 
	{0xc8, 0xe1}, 
	{0xc6, 0x220b}, 
	{0xc8, 0x192}, 
	{0xc6, 0xa217}, 
	{0xc8, 0x8}, 
	{0xc6, 0x2228}, 
	{0xc8, 0x20f}, 
	{0xc6, 0x222f}, 
	{0xc8, 0x0}, 
	{0xc6, 0xa408}, 
	{0xc8, 0xff}, 
	{0xc6, 0xa409}, 
	{0xc8, 0x1}, 
	{0xc6, 0xa40a}, 
	{0xc8, 0xff}, 
	{0xc6, 0xa40b}, 
	{0xc8, 0x1}, 
	{0xc6, 0x2411}, 
	{0xc8, 0x0}, 
	{0xc6, 0x2413}, 
	{0xc8, 0x0}, 
	{0xf0, 0x1}, 
	{0xc6, 0xa103}, 
	{0xc8, 0x6}, 
	{0xf0, 0x1}, 
	{0xc6, 0xa103}, 
	{0xc8, 0x5}, 
	{0xf0, 0x1}, 
	{0x97, 0x20}, 
	{0xff, 0xffff},	
};

                                                                               
const struct sensor_reg MT9D111_QVGA_3fps[] PROGMEM=
{    
		{0xf0, 0x0}, 
		
		
		//{0x65, 0xA000},
		//{0x65, 0x2000},
		
		{0x33, 0x343}, 
		{0xf0, 0x1}, 
		{0xc6, 0xa115}, 
		{0xc8, 0x20}, 
		{0xf0, 0x0}, 
		{0x38, 0x866}, 
		{0xf0, 0x1}, 
		{0xc6, 0x2703}, 
		{0xc8, 0x640}, 
		{0xc6, 0x2705}, 
		{0xc8, 0x4b0}, 
		{0xf0, 0x0}, 
		{0x21, 0x402}, //Mirror Column
		{0xf0, 0x1}, 
		{0xc6, 0x2729}, 
		{0xc8, 0x640}, 
		{0xc6, 0x272d}, 
		{0xc8, 0x4b0}, 
		{0xc6, 0xa103}, 
		{0xc8, 0x5}, 
		{0xf0, 0x0}, 
		{0xf2, 0x0}, 
		{0x3, 0x4b0}, 
		{0x4, 0x640}, 
		{0x65, 0xe000}, 
		{0x66, 0x1902}, 
		{0x67, 0x500}, 
		{0x65, 0xa000}, 
		{0xf0, 0x1}, 
		{0x97, 0x20}, 
		{0x98, 0x0}, 
		{0xf0, 0x1}, 
		{0x97, 0x20}, 
		{0xf0, 0x0}, 
		{0x33, 0x343}, 
		{0xf0, 0x1}, 
		{0xc6, 0xa115}, 
		{0xc8, 0x20}, 
		{0xf0, 0x0}, 
		{0x38, 0x866}, 
		{0xf0, 0x1}, 
		{0xc6, 0x2703}, 
		{0xc8, 0x640}, 
		{0xc6, 0x2705}, 
		{0xc8, 0x4b0}, 
		{0xf0, 0x0}, 
		{0x21, 0x402}, 
		{0x20, 0x7b6}, 
		{0xf0, 0x1}, 
		{0xc6, 0x2729}, 
		{0xc8, 0x640}, 
		{0xc6, 0x272d}, 
		{0xc8, 0x4b0}, 
		{0xc6, 0xa103}, 
		{0xc8, 0x5}, 
		{0xf0, 0x0}, 
		/*
		{0x05, 0x00A2},
		{0x06, 0x0022},
		{0x07, 0x00A2},
		{0x08, 0x000B},
		{0x20, 0x07B4},
		{0x21, 0x04B4},
		{0x66, 0x5008},
		{0x67, 0x506 },
		*/
		{0xf2, 0x0}, 
		{0x3, 0x4b0}, 
		{0x4, 0x640}, 
		{0x65, 0xe000}, 
		{0x66, 0x1902}, 
		{0x67, 0x500}, 
		{0x65, 0xa000}, 
		{0xf0, 0x1}, 
		{0x97, 0x20}, 
		{0x98, 0x0}, 
		{0xf0, 0x1}, 
		{0xc6, 0x2703}, 
		{0xc8, 0x140}, 
		{0xc6, 0x2705}, 
		{0xc8, 0xf0}, 
		{0xc6, 0x2707}, 
		{0xc8, 0x140}, 
		{0xc6, 0x2709}, 
		{0xc8, 0xf0}, 
		{0xc6, 0x2779}, 
		{0xc8, 0x140}, 
		{0xc6, 0x277b}, 
		{0xc8, 0xf0}, 
		{0xc6, 0xa103}, 
		{0xc8, 0x5}, 
		/*
		{0xc6, 0x2120}, 
		{0xc8, 0x0},
		
		{0xc6, 0x2103}, 
		{0xc8, 0x1},
		*/
		{0xff, 0xffff},
};





#endif //MT9D111_REGS_H